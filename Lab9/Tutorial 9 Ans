1.
a.
public static boolean compare(Object s, Object t){
    return s.getclass().equals(t.getclass());
}

b.
public static boolean isClass(Object s){
    return s instanceof Person;
}

2.
public class Organism{
    double size;
    double growthRate;

    public Organism(double size, double growthRate){
        this.size = size;
        this.growthRate = growthRate;
    }
}

public class Animal extends Organism{
    private double amount;

    public Animal(double size, double growthRate, double amount){
        super(size, growthRate);
        this.amount = amount;
    }

    public void Display(){
        System.out.println("Size: " + size);
        System.out.println("Growth Rate: " + growthRate);
        System.out.println("Amount of Eating Need: " + amount);
    }
}

3.
public class PaySystem{
    protected double payrate;
    double hour;
    protected double totalPay = 0;

    public PaySystem(double payrate){
        this.payrate = payrate;
    }

    public double pay(double hour){
        totalPay += (hour * payrate);
        return totalPay;
    }

    public void Display(){
        System.out.println("Total Payment: " + totalPay);
    }
}

public class RegularPay extends PaySystem{
    public RegularPay(double payrate){
        super(payrate);
    }
}
public class SpecialPay extends PaySystem{
    public SpecialPay(double payrate){
        super(payrate);
    }

    @Override
    public double pay(double hour){
        totalPay += (hour * payrate * 1.3);
        return totalPay;
    }
}

4.
public class PurchaseSystem{
    protected String code;
    protected double price;
    protected int quantity;
    protected double total;

    public PurchaseSystem(String code, double price, int quantity){
        this.code = code;
        this.price = price;
        this.quantity = quantity;
    }

    public void totalPrice(){
        total = price * quantity;
    }

    public void Display(){
        System.out.println("Total Price: " + total);
    }
}

public class SugarPurchase extends PurchaseSystem{
    private double weight;

    public SugarPurchase(String code, double price, int quantity, double weight){
        super (code, price, quantity);
        this.weight = weight;
    }

    @Override
    public void totalPrice(){
        total = price * quantity * weight;
    }
}
